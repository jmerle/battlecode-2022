package camel_case_v23.dijkstra;

import battlecode.common.Direction;
import battlecode.common.GameActionException;
import battlecode.common.MapLocation;
import battlecode.common.RobotController;

// Generated by scripts/dijkstra.py
// Based on Malott Fat Cats's 2021 pathfinding
// Malott Fat Cats's 2021 post-mortem: https://www.battlecode.org/files/postmortem-2021-malott-fat-cats.pdf
public class Dijkstra34 implements Dijkstra {
    private static RobotController rc;

    private static int mapWidth;
    private static int mapHeight;

    private static MapLocation myLocation;
    private static int myX;
    private static int myY;
    private static int xOffset;
    private static int yOffset;

    private static MapLocation location1;
    private static double distance1;
    private static Direction direction1;
    private static MapLocation location2;
    private static double distance2;
    private static Direction direction2;
    private static MapLocation location3;
    private static double distance3;
    private static Direction direction3;
    private static MapLocation location4;
    private static double distance4;
    private static Direction direction4;
    private static MapLocation location5;
    private static double distance5;
    private static Direction direction5;
    private static MapLocation location6;
    private static double distance6;
    private static Direction direction6;
    private static MapLocation location7;
    private static double distance7;
    private static Direction direction7;
    private static MapLocation location8;
    private static double distance8;
    private static Direction direction8;
    private static MapLocation location9;
    private static double distance9;
    private static Direction direction9;
    private static MapLocation location12;
    private static double distance12;
    private static Direction direction12;
    private static MapLocation location15;
    private static double distance15;
    private static Direction direction15;
    private static MapLocation location18;
    private static double distance18;
    private static Direction direction18;
    private static MapLocation location10;
    private static double distance10;
    private static Direction direction10;
    private static MapLocation location11;
    private static double distance11;
    private static Direction direction11;
    private static MapLocation location13;
    private static double distance13;
    private static Direction direction13;
    private static MapLocation location14;
    private static double distance14;
    private static Direction direction14;
    private static MapLocation location16;
    private static double distance16;
    private static Direction direction16;
    private static MapLocation location17;
    private static double distance17;
    private static Direction direction17;
    private static MapLocation location19;
    private static double distance19;
    private static Direction direction19;
    private static MapLocation location20;
    private static double distance20;
    private static Direction direction20;
    private static MapLocation location21;
    private static double distance21;
    private static Direction direction21;
    private static MapLocation location22;
    private static double distance22;
    private static Direction direction22;
    private static MapLocation location23;
    private static double distance23;
    private static Direction direction23;
    private static MapLocation location24;
    private static double distance24;
    private static Direction direction24;
    private static MapLocation location25;
    private static double distance25;
    private static Direction direction25;
    private static MapLocation location30;
    private static double distance30;
    private static Direction direction30;
    private static MapLocation location35;
    private static double distance35;
    private static Direction direction35;
    private static MapLocation location40;
    private static double distance40;
    private static Direction direction40;
    private static MapLocation location26;
    private static double distance26;
    private static Direction direction26;
    private static MapLocation location27;
    private static double distance27;
    private static Direction direction27;
    private static MapLocation location31;
    private static double distance31;
    private static Direction direction31;
    private static MapLocation location32;
    private static double distance32;
    private static Direction direction32;
    private static MapLocation location36;
    private static double distance36;
    private static Direction direction36;
    private static MapLocation location37;
    private static double distance37;
    private static Direction direction37;
    private static MapLocation location41;
    private static double distance41;
    private static Direction direction41;
    private static MapLocation location42;
    private static double distance42;
    private static Direction direction42;
    private static MapLocation location28;
    private static double distance28;
    private static Direction direction28;
    private static MapLocation location29;
    private static double distance29;
    private static Direction direction29;
    private static MapLocation location33;
    private static double distance33;
    private static Direction direction33;
    private static MapLocation location34;
    private static double distance34;
    private static Direction direction34;
    private static MapLocation location38;
    private static double distance38;
    private static Direction direction38;
    private static MapLocation location39;
    private static double distance39;
    private static Direction direction39;
    private static MapLocation location43;
    private static double distance43;
    private static Direction direction43;
    private static MapLocation location44;
    private static double distance44;
    private static Direction direction44;
    private static MapLocation location49;
    private static double distance49;
    private static Direction direction49;
    private static MapLocation location56;
    private static double distance56;
    private static Direction direction56;
    private static MapLocation location63;
    private static double distance63;
    private static Direction direction63;
    private static MapLocation location70;
    private static double distance70;
    private static Direction direction70;
    private static MapLocation location50;
    private static double distance50;
    private static Direction direction50;
    private static MapLocation location51;
    private static double distance51;
    private static Direction direction51;
    private static MapLocation location57;
    private static double distance57;
    private static Direction direction57;
    private static MapLocation location58;
    private static double distance58;
    private static Direction direction58;
    private static MapLocation location64;
    private static double distance64;
    private static Direction direction64;
    private static MapLocation location65;
    private static double distance65;
    private static Direction direction65;
    private static MapLocation location71;
    private static double distance71;
    private static Direction direction71;
    private static MapLocation location72;
    private static double distance72;
    private static Direction direction72;
    private static MapLocation location45;
    private static double distance45;
    private static Direction direction45;
    private static MapLocation location46;
    private static double distance46;
    private static Direction direction46;
    private static MapLocation location47;
    private static double distance47;
    private static Direction direction47;
    private static MapLocation location48;
    private static double distance48;
    private static Direction direction48;
    private static MapLocation location52;
    private static double distance52;
    private static Direction direction52;
    private static MapLocation location53;
    private static double distance53;
    private static Direction direction53;
    private static MapLocation location59;
    private static double distance59;
    private static Direction direction59;
    private static MapLocation location60;
    private static double distance60;
    private static Direction direction60;
    private static MapLocation location66;
    private static double distance66;
    private static Direction direction66;
    private static MapLocation location67;
    private static double distance67;
    private static Direction direction67;
    private static MapLocation location73;
    private static double distance73;
    private static Direction direction73;
    private static MapLocation location74;
    private static double distance74;
    private static Direction direction74;
    private static MapLocation location54;
    private static double distance54;
    private static Direction direction54;
    private static MapLocation location55;
    private static double distance55;
    private static Direction direction55;
    private static MapLocation location61;
    private static double distance61;
    private static Direction direction61;
    private static MapLocation location62;
    private static double distance62;
    private static Direction direction62;
    private static MapLocation location68;
    private static double distance68;
    private static Direction direction68;
    private static MapLocation location69;
    private static double distance69;
    private static Direction direction69;
    private static MapLocation location75;
    private static double distance75;
    private static Direction direction75;
    private static MapLocation location76;
    private static double distance76;
    private static Direction direction76;
    private static MapLocation location81;
    private static double distance81;
    private static Direction direction81;
    private static MapLocation location88;
    private static double distance88;
    private static Direction direction88;
    private static MapLocation location95;
    private static double distance95;
    private static Direction direction95;
    private static MapLocation location102;
    private static double distance102;
    private static Direction direction102;
    private static MapLocation location82;
    private static double distance82;
    private static Direction direction82;
    private static MapLocation location83;
    private static double distance83;
    private static Direction direction83;
    private static MapLocation location89;
    private static double distance89;
    private static Direction direction89;
    private static MapLocation location90;
    private static double distance90;
    private static Direction direction90;
    private static MapLocation location96;
    private static double distance96;
    private static Direction direction96;
    private static MapLocation location97;
    private static double distance97;
    private static Direction direction97;
    private static MapLocation location103;
    private static double distance103;
    private static Direction direction103;
    private static MapLocation location104;
    private static double distance104;
    private static Direction direction104;
    private static MapLocation location84;
    private static double distance84;
    private static Direction direction84;
    private static MapLocation location85;
    private static double distance85;
    private static Direction direction85;
    private static MapLocation location91;
    private static double distance91;
    private static Direction direction91;
    private static MapLocation location92;
    private static double distance92;
    private static Direction direction92;
    private static MapLocation location98;
    private static double distance98;
    private static Direction direction98;
    private static MapLocation location99;
    private static double distance99;
    private static Direction direction99;
    private static MapLocation location105;
    private static double distance105;
    private static Direction direction105;
    private static MapLocation location106;
    private static double distance106;
    private static Direction direction106;
    private static MapLocation location77;
    private static double distance77;
    private static Direction direction77;
    private static MapLocation location78;
    private static double distance78;
    private static Direction direction78;
    private static MapLocation location79;
    private static double distance79;
    private static Direction direction79;
    private static MapLocation location80;
    private static double distance80;
    private static Direction direction80;
    private static MapLocation location86;
    private static double distance86;
    private static Direction direction86;
    private static MapLocation location87;
    private static double distance87;
    private static Direction direction87;
    private static MapLocation location93;
    private static double distance93;
    private static Direction direction93;
    private static MapLocation location94;
    private static double distance94;
    private static Direction direction94;
    private static MapLocation location100;
    private static double distance100;
    private static Direction direction100;
    private static MapLocation location101;
    private static double distance101;
    private static Direction direction101;
    private static MapLocation location107;
    private static double distance107;
    private static Direction direction107;
    private static MapLocation location108;
    private static double distance108;
    private static Direction direction108;

    private static double weight;

    private static double currentDistance;

    private static double score54;
    private static double score55;
    private static double score61;
    private static double score62;
    private static double score68;
    private static double score69;
    private static double score75;
    private static double score76;
    private static double score81;
    private static double score88;
    private static double score95;
    private static double score102;
    private static double score82;
    private static double score83;
    private static double score89;
    private static double score90;
    private static double score96;
    private static double score97;
    private static double score103;
    private static double score104;
    private static double score84;
    private static double score85;
    private static double score91;
    private static double score92;
    private static double score98;
    private static double score99;
    private static double score105;
    private static double score106;
    private static double score77;
    private static double score78;
    private static double score79;
    private static double score80;
    private static double score86;
    private static double score87;
    private static double score93;
    private static double score94;
    private static double score100;
    private static double score101;
    private static double score107;

    private static double maxScore;

    public Dijkstra34(RobotController rc) {
        Dijkstra34.rc = rc;

        mapWidth = rc.getMapWidth();
        mapHeight = rc.getMapHeight();
    }

    @Override
    public Direction getBestDirection(MapLocation target, Direction blockedDirection) throws GameActionException {
        myLocation = rc.getLocation();
        myX = myLocation.x;
        myY = myLocation.y;
        xOffset = mapWidth - myX;
        yOffset = mapHeight - myY;

        location1 = rc.adjacentLocation(Direction.WEST);
        distance1 = 1_000_000.0;
        location2 = rc.adjacentLocation(Direction.EAST);
        distance2 = 1_000_000.0;
        location3 = rc.adjacentLocation(Direction.SOUTH);
        distance3 = 1_000_000.0;
        location4 = rc.adjacentLocation(Direction.NORTH);
        distance4 = 1_000_000.0;
        location5 = rc.adjacentLocation(Direction.SOUTHWEST);
        distance5 = 1_000_000.0;
        location6 = rc.adjacentLocation(Direction.NORTHWEST);
        distance6 = 1_000_000.0;
        location7 = rc.adjacentLocation(Direction.SOUTHEAST);
        distance7 = 1_000_000.0;
        location8 = rc.adjacentLocation(Direction.NORTHEAST);
        distance8 = 1_000_000.0;
        location9 = location1.add(Direction.WEST);
        distance9 = 1_000_000.0;
        location12 = location2.add(Direction.EAST);
        distance12 = 1_000_000.0;
        location15 = location3.add(Direction.SOUTH);
        distance15 = 1_000_000.0;
        location18 = location4.add(Direction.NORTH);
        distance18 = 1_000_000.0;
        location10 = location1.add(Direction.SOUTHWEST);
        distance10 = 1_000_000.0;
        location11 = location1.add(Direction.NORTHWEST);
        distance11 = 1_000_000.0;
        location13 = location2.add(Direction.SOUTHEAST);
        distance13 = 1_000_000.0;
        location14 = location2.add(Direction.NORTHEAST);
        distance14 = 1_000_000.0;
        location16 = location3.add(Direction.SOUTHWEST);
        distance16 = 1_000_000.0;
        location17 = location3.add(Direction.SOUTHEAST);
        distance17 = 1_000_000.0;
        location19 = location4.add(Direction.NORTHWEST);
        distance19 = 1_000_000.0;
        location20 = location4.add(Direction.NORTHEAST);
        distance20 = 1_000_000.0;
        location21 = location5.add(Direction.SOUTHWEST);
        distance21 = 1_000_000.0;
        location22 = location6.add(Direction.NORTHWEST);
        distance22 = 1_000_000.0;
        location23 = location7.add(Direction.SOUTHEAST);
        distance23 = 1_000_000.0;
        location24 = location8.add(Direction.NORTHEAST);
        distance24 = 1_000_000.0;
        location25 = location9.add(Direction.WEST);
        distance25 = 1_000_000.0;
        location30 = location12.add(Direction.EAST);
        distance30 = 1_000_000.0;
        location35 = location15.add(Direction.SOUTH);
        distance35 = 1_000_000.0;
        location40 = location18.add(Direction.NORTH);
        distance40 = 1_000_000.0;
        location26 = location9.add(Direction.SOUTHWEST);
        distance26 = 1_000_000.0;
        location27 = location9.add(Direction.NORTHWEST);
        distance27 = 1_000_000.0;
        location31 = location12.add(Direction.SOUTHEAST);
        distance31 = 1_000_000.0;
        location32 = location12.add(Direction.NORTHEAST);
        distance32 = 1_000_000.0;
        location36 = location15.add(Direction.SOUTHWEST);
        distance36 = 1_000_000.0;
        location37 = location15.add(Direction.SOUTHEAST);
        distance37 = 1_000_000.0;
        location41 = location18.add(Direction.NORTHWEST);
        distance41 = 1_000_000.0;
        location42 = location18.add(Direction.NORTHEAST);
        distance42 = 1_000_000.0;
        location28 = location10.add(Direction.SOUTHWEST);
        distance28 = 1_000_000.0;
        location29 = location11.add(Direction.NORTHWEST);
        distance29 = 1_000_000.0;
        location33 = location13.add(Direction.SOUTHEAST);
        distance33 = 1_000_000.0;
        location34 = location14.add(Direction.NORTHEAST);
        distance34 = 1_000_000.0;
        location38 = location16.add(Direction.SOUTHWEST);
        distance38 = 1_000_000.0;
        location39 = location17.add(Direction.SOUTHEAST);
        distance39 = 1_000_000.0;
        location43 = location19.add(Direction.NORTHWEST);
        distance43 = 1_000_000.0;
        location44 = location20.add(Direction.NORTHEAST);
        distance44 = 1_000_000.0;
        location49 = location25.add(Direction.WEST);
        distance49 = 1_000_000.0;
        location56 = location30.add(Direction.EAST);
        distance56 = 1_000_000.0;
        location63 = location35.add(Direction.SOUTH);
        distance63 = 1_000_000.0;
        location70 = location40.add(Direction.NORTH);
        distance70 = 1_000_000.0;
        location50 = location25.add(Direction.SOUTHWEST);
        distance50 = 1_000_000.0;
        location51 = location25.add(Direction.NORTHWEST);
        distance51 = 1_000_000.0;
        location57 = location30.add(Direction.SOUTHEAST);
        distance57 = 1_000_000.0;
        location58 = location30.add(Direction.NORTHEAST);
        distance58 = 1_000_000.0;
        location64 = location35.add(Direction.SOUTHWEST);
        distance64 = 1_000_000.0;
        location65 = location35.add(Direction.SOUTHEAST);
        distance65 = 1_000_000.0;
        location71 = location40.add(Direction.NORTHWEST);
        distance71 = 1_000_000.0;
        location72 = location40.add(Direction.NORTHEAST);
        distance72 = 1_000_000.0;
        location45 = location21.add(Direction.SOUTHWEST);
        distance45 = 1_000_000.0;
        location46 = location22.add(Direction.NORTHWEST);
        distance46 = 1_000_000.0;
        location47 = location23.add(Direction.SOUTHEAST);
        distance47 = 1_000_000.0;
        location48 = location24.add(Direction.NORTHEAST);
        distance48 = 1_000_000.0;
        location52 = location26.add(Direction.SOUTHWEST);
        distance52 = 1_000_000.0;
        location53 = location27.add(Direction.NORTHWEST);
        distance53 = 1_000_000.0;
        location59 = location31.add(Direction.SOUTHEAST);
        distance59 = 1_000_000.0;
        location60 = location32.add(Direction.NORTHEAST);
        distance60 = 1_000_000.0;
        location66 = location36.add(Direction.SOUTHWEST);
        distance66 = 1_000_000.0;
        location67 = location37.add(Direction.SOUTHEAST);
        distance67 = 1_000_000.0;
        location73 = location41.add(Direction.NORTHWEST);
        distance73 = 1_000_000.0;
        location74 = location42.add(Direction.NORTHEAST);
        distance74 = 1_000_000.0;
        location54 = location28.add(Direction.SOUTHWEST);
        distance54 = 1_000_000.0;
        location55 = location29.add(Direction.NORTHWEST);
        distance55 = 1_000_000.0;
        location61 = location33.add(Direction.SOUTHEAST);
        distance61 = 1_000_000.0;
        location62 = location34.add(Direction.NORTHEAST);
        distance62 = 1_000_000.0;
        location68 = location38.add(Direction.SOUTHWEST);
        distance68 = 1_000_000.0;
        location69 = location39.add(Direction.SOUTHEAST);
        distance69 = 1_000_000.0;
        location75 = location43.add(Direction.NORTHWEST);
        distance75 = 1_000_000.0;
        location76 = location44.add(Direction.NORTHEAST);
        distance76 = 1_000_000.0;
        location81 = location49.add(Direction.WEST);
        distance81 = 1_000_000.0;
        location88 = location56.add(Direction.EAST);
        distance88 = 1_000_000.0;
        location95 = location63.add(Direction.SOUTH);
        distance95 = 1_000_000.0;
        location102 = location70.add(Direction.NORTH);
        distance102 = 1_000_000.0;
        location82 = location49.add(Direction.SOUTHWEST);
        distance82 = 1_000_000.0;
        location83 = location49.add(Direction.NORTHWEST);
        distance83 = 1_000_000.0;
        location89 = location56.add(Direction.SOUTHEAST);
        distance89 = 1_000_000.0;
        location90 = location56.add(Direction.NORTHEAST);
        distance90 = 1_000_000.0;
        location96 = location63.add(Direction.SOUTHWEST);
        distance96 = 1_000_000.0;
        location97 = location63.add(Direction.SOUTHEAST);
        distance97 = 1_000_000.0;
        location103 = location70.add(Direction.NORTHWEST);
        distance103 = 1_000_000.0;
        location104 = location70.add(Direction.NORTHEAST);
        distance104 = 1_000_000.0;
        location84 = location50.add(Direction.SOUTHWEST);
        distance84 = 1_000_000.0;
        location85 = location51.add(Direction.NORTHWEST);
        distance85 = 1_000_000.0;
        location91 = location57.add(Direction.SOUTHEAST);
        distance91 = 1_000_000.0;
        location92 = location58.add(Direction.NORTHEAST);
        distance92 = 1_000_000.0;
        location98 = location64.add(Direction.SOUTHWEST);
        distance98 = 1_000_000.0;
        location99 = location65.add(Direction.SOUTHEAST);
        distance99 = 1_000_000.0;
        location105 = location71.add(Direction.NORTHWEST);
        distance105 = 1_000_000.0;
        location106 = location72.add(Direction.NORTHEAST);
        distance106 = 1_000_000.0;
        location77 = location45.add(Direction.SOUTHWEST);
        distance77 = 1_000_000.0;
        location78 = location46.add(Direction.NORTHWEST);
        distance78 = 1_000_000.0;
        location79 = location47.add(Direction.SOUTHEAST);
        distance79 = 1_000_000.0;
        location80 = location48.add(Direction.NORTHEAST);
        distance80 = 1_000_000.0;
        location86 = location52.add(Direction.SOUTHWEST);
        distance86 = 1_000_000.0;
        location87 = location53.add(Direction.NORTHWEST);
        distance87 = 1_000_000.0;
        location93 = location59.add(Direction.SOUTHEAST);
        distance93 = 1_000_000.0;
        location94 = location60.add(Direction.NORTHEAST);
        distance94 = 1_000_000.0;
        location100 = location66.add(Direction.SOUTHWEST);
        distance100 = 1_000_000.0;
        location101 = location67.add(Direction.SOUTHEAST);
        distance101 = 1_000_000.0;
        location107 = location73.add(Direction.NORTHWEST);
        distance107 = 1_000_000.0;
        location108 = location74.add(Direction.NORTHEAST);
        distance108 = 1_000_000.0;

        if (blockedDirection != Direction.WEST && rc.canMove(Direction.WEST)) {
            distance1 = 1.0 + rc.senseRubble(location1);
            direction1 = Direction.WEST;
        }
        if (blockedDirection != Direction.EAST && rc.canMove(Direction.EAST)) {
            distance2 = 1.0 + rc.senseRubble(location2);
            direction2 = Direction.EAST;
        }
        if (blockedDirection != Direction.SOUTH && rc.canMove(Direction.SOUTH)) {
            distance3 = 1.0 + rc.senseRubble(location3);
            direction3 = Direction.SOUTH;
        }
        if (blockedDirection != Direction.NORTH && rc.canMove(Direction.NORTH)) {
            distance4 = 1.0 + rc.senseRubble(location4);
            direction4 = Direction.NORTH;
        }
        if (blockedDirection != Direction.SOUTHWEST && rc.canMove(Direction.SOUTHWEST)) {
            distance5 = 1.0 + rc.senseRubble(location5);
            direction5 = Direction.SOUTHWEST;
        }
        if (blockedDirection != Direction.NORTHWEST && rc.canMove(Direction.NORTHWEST)) {
            distance6 = 1.0 + rc.senseRubble(location6);
            direction6 = Direction.NORTHWEST;
        }
        if (blockedDirection != Direction.SOUTHEAST && rc.canMove(Direction.SOUTHEAST)) {
            distance7 = 1.0 + rc.senseRubble(location7);
            direction7 = Direction.SOUTHEAST;
        }
        if (blockedDirection != Direction.NORTHEAST && rc.canMove(Direction.NORTHEAST)) {
            distance8 = 1.0 + rc.senseRubble(location8);
            direction8 = Direction.NORTHEAST;
        }
        switch (myX) {
            case 0:
            case 1:
                break;
            default:
                weight = 1.0 + rc.senseRubble(location9);
                if (distance1 + weight < distance9) {
                    distance9 = distance1 + weight;
                    direction9 = direction1;
                }
                if (distance5 + weight < distance9) {
                    distance9 = distance5 + weight;
                    direction9 = direction5;
                }
                if (distance6 + weight < distance9) {
                    distance9 = distance6 + weight;
                    direction9 = direction6;
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
            case 2:
                break;
            default:
                weight = 1.0 + rc.senseRubble(location12);
                if (distance2 + weight < distance12) {
                    distance12 = distance2 + weight;
                    direction12 = direction2;
                }
                if (distance7 + weight < distance12) {
                    distance12 = distance7 + weight;
                    direction12 = direction7;
                }
                if (distance8 + weight < distance12) {
                    distance12 = distance8 + weight;
                    direction12 = direction8;
                }
        }
        switch (myY) {
            case 0:
            case 1:
                break;
            default:
                weight = 1.0 + rc.senseRubble(location15);
                if (distance3 + weight < distance15) {
                    distance15 = distance3 + weight;
                    direction15 = direction3;
                }
                if (distance5 + weight < distance15) {
                    distance15 = distance5 + weight;
                    direction15 = direction5;
                }
                if (distance7 + weight < distance15) {
                    distance15 = distance7 + weight;
                    direction15 = direction7;
                }
        }
        switch (yOffset) {
            case 0:
            case 1:
            case 2:
                break;
            default:
                weight = 1.0 + rc.senseRubble(location18);
                if (distance4 + weight < distance18) {
                    distance18 = distance4 + weight;
                    direction18 = direction4;
                }
                if (distance6 + weight < distance18) {
                    distance18 = distance6 + weight;
                    direction18 = direction6;
                }
                if (distance8 + weight < distance18) {
                    distance18 = distance8 + weight;
                    direction18 = direction8;
                }
        }
        switch (myX) {
            case 0:
            case 1:
                break;
            default:
                switch (myY) {
                    case 0:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location10);
                        if (distance5 + weight < distance10) {
                            distance10 = distance5 + weight;
                            direction10 = direction5;
                        }
                        if (distance9 + weight < distance10) {
                            distance10 = distance9 + weight;
                            direction10 = direction9;
                        }
                        if (distance1 + weight < distance10) {
                            distance10 = distance1 + weight;
                            direction10 = direction1;
                        }
                }
        }
        switch (myX) {
            case 0:
            case 1:
                break;
            default:
                switch (yOffset) {
                    case 0:
                    case 1:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location11);
                        if (distance6 + weight < distance11) {
                            distance11 = distance6 + weight;
                            direction11 = direction6;
                        }
                        if (distance9 + weight < distance11) {
                            distance11 = distance9 + weight;
                            direction11 = direction9;
                        }
                        if (distance1 + weight < distance11) {
                            distance11 = distance1 + weight;
                            direction11 = direction1;
                        }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
            case 2:
                break;
            default:
                switch (myY) {
                    case 0:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location13);
                        if (distance7 + weight < distance13) {
                            distance13 = distance7 + weight;
                            direction13 = direction7;
                        }
                        if (distance12 + weight < distance13) {
                            distance13 = distance12 + weight;
                            direction13 = direction12;
                        }
                        if (distance2 + weight < distance13) {
                            distance13 = distance2 + weight;
                            direction13 = direction2;
                        }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
            case 2:
                break;
            default:
                switch (yOffset) {
                    case 0:
                    case 1:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location14);
                        if (distance8 + weight < distance14) {
                            distance14 = distance8 + weight;
                            direction14 = direction8;
                        }
                        if (distance12 + weight < distance14) {
                            distance14 = distance12 + weight;
                            direction14 = direction12;
                        }
                        if (distance2 + weight < distance14) {
                            distance14 = distance2 + weight;
                            direction14 = direction2;
                        }
                }
        }
        switch (myX) {
            case 0:
                break;
            default:
                switch (myY) {
                    case 0:
                    case 1:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location16);
                        if (distance15 + weight < distance16) {
                            distance16 = distance15 + weight;
                            direction16 = direction15;
                        }
                        if (distance5 + weight < distance16) {
                            distance16 = distance5 + weight;
                            direction16 = direction5;
                        }
                        if (distance3 + weight < distance16) {
                            distance16 = distance3 + weight;
                            direction16 = direction3;
                        }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
                break;
            default:
                switch (myY) {
                    case 0:
                    case 1:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location17);
                        if (distance15 + weight < distance17) {
                            distance17 = distance15 + weight;
                            direction17 = direction15;
                        }
                        if (distance7 + weight < distance17) {
                            distance17 = distance7 + weight;
                            direction17 = direction7;
                        }
                        if (distance3 + weight < distance17) {
                            distance17 = distance3 + weight;
                            direction17 = direction3;
                        }
                }
        }
        switch (myX) {
            case 0:
                break;
            default:
                switch (yOffset) {
                    case 0:
                    case 1:
                    case 2:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location19);
                        if (distance18 + weight < distance19) {
                            distance19 = distance18 + weight;
                            direction19 = direction18;
                        }
                        if (distance6 + weight < distance19) {
                            distance19 = distance6 + weight;
                            direction19 = direction6;
                        }
                        if (distance4 + weight < distance19) {
                            distance19 = distance4 + weight;
                            direction19 = direction4;
                        }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
                break;
            default:
                switch (yOffset) {
                    case 0:
                    case 1:
                    case 2:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location20);
                        if (distance18 + weight < distance20) {
                            distance20 = distance18 + weight;
                            direction20 = direction18;
                        }
                        if (distance8 + weight < distance20) {
                            distance20 = distance8 + weight;
                            direction20 = direction8;
                        }
                        if (distance4 + weight < distance20) {
                            distance20 = distance4 + weight;
                            direction20 = direction4;
                        }
                }
        }
        switch (myX) {
            case 0:
            case 1:
                break;
            default:
                switch (myY) {
                    case 0:
                    case 1:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location21);
                        if (distance16 + weight < distance21) {
                            distance21 = distance16 + weight;
                            direction21 = direction16;
                        }
                        if (distance10 + weight < distance21) {
                            distance21 = distance10 + weight;
                            direction21 = direction10;
                        }
                        if (distance5 + weight < distance21) {
                            distance21 = distance5 + weight;
                            direction21 = direction5;
                        }
                }
        }
        switch (myX) {
            case 0:
            case 1:
                break;
            default:
                switch (yOffset) {
                    case 0:
                    case 1:
                    case 2:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location22);
                        if (distance19 + weight < distance22) {
                            distance22 = distance19 + weight;
                            direction22 = direction19;
                        }
                        if (distance11 + weight < distance22) {
                            distance22 = distance11 + weight;
                            direction22 = direction11;
                        }
                        if (distance6 + weight < distance22) {
                            distance22 = distance6 + weight;
                            direction22 = direction6;
                        }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
            case 2:
                break;
            default:
                switch (myY) {
                    case 0:
                    case 1:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location23);
                        if (distance17 + weight < distance23) {
                            distance23 = distance17 + weight;
                            direction23 = direction17;
                        }
                        if (distance13 + weight < distance23) {
                            distance23 = distance13 + weight;
                            direction23 = direction13;
                        }
                        if (distance7 + weight < distance23) {
                            distance23 = distance7 + weight;
                            direction23 = direction7;
                        }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
            case 2:
                break;
            default:
                switch (yOffset) {
                    case 0:
                    case 1:
                    case 2:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location24);
                        if (distance20 + weight < distance24) {
                            distance24 = distance20 + weight;
                            direction24 = direction20;
                        }
                        if (distance14 + weight < distance24) {
                            distance24 = distance14 + weight;
                            direction24 = direction14;
                        }
                        if (distance8 + weight < distance24) {
                            distance24 = distance8 + weight;
                            direction24 = direction8;
                        }
                }
        }
        switch (myX) {
            case 0:
            case 1:
            case 2:
                break;
            default:
                weight = 1.0 + rc.senseRubble(location25);
                if (distance9 + weight < distance25) {
                    distance25 = distance9 + weight;
                    direction25 = direction9;
                }
                if (distance10 + weight < distance25) {
                    distance25 = distance10 + weight;
                    direction25 = direction10;
                }
                if (distance11 + weight < distance25) {
                    distance25 = distance11 + weight;
                    direction25 = direction11;
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
            case 2:
            case 3:
                break;
            default:
                weight = 1.0 + rc.senseRubble(location30);
                if (distance12 + weight < distance30) {
                    distance30 = distance12 + weight;
                    direction30 = direction12;
                }
                if (distance13 + weight < distance30) {
                    distance30 = distance13 + weight;
                    direction30 = direction13;
                }
                if (distance14 + weight < distance30) {
                    distance30 = distance14 + weight;
                    direction30 = direction14;
                }
        }
        switch (myY) {
            case 0:
            case 1:
            case 2:
                break;
            default:
                weight = 1.0 + rc.senseRubble(location35);
                if (distance15 + weight < distance35) {
                    distance35 = distance15 + weight;
                    direction35 = direction15;
                }
                if (distance16 + weight < distance35) {
                    distance35 = distance16 + weight;
                    direction35 = direction16;
                }
                if (distance17 + weight < distance35) {
                    distance35 = distance17 + weight;
                    direction35 = direction17;
                }
        }
        switch (yOffset) {
            case 0:
            case 1:
            case 2:
            case 3:
                break;
            default:
                weight = 1.0 + rc.senseRubble(location40);
                if (distance18 + weight < distance40) {
                    distance40 = distance18 + weight;
                    direction40 = direction18;
                }
                if (distance19 + weight < distance40) {
                    distance40 = distance19 + weight;
                    direction40 = direction19;
                }
                if (distance20 + weight < distance40) {
                    distance40 = distance20 + weight;
                    direction40 = direction20;
                }
        }
        switch (myX) {
            case 0:
            case 1:
            case 2:
                break;
            default:
                switch (myY) {
                    case 0:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location26);
                        if (distance10 + weight < distance26) {
                            distance26 = distance10 + weight;
                            direction26 = direction10;
                        }
                        if (distance25 + weight < distance26) {
                            distance26 = distance25 + weight;
                            direction26 = direction25;
                        }
                        if (distance21 + weight < distance26) {
                            distance26 = distance21 + weight;
                            direction26 = direction21;
                        }
                        if (distance9 + weight < distance26) {
                            distance26 = distance9 + weight;
                            direction26 = direction9;
                        }
                }
        }
        switch (myX) {
            case 0:
            case 1:
            case 2:
                break;
            default:
                switch (yOffset) {
                    case 0:
                    case 1:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location27);
                        if (distance11 + weight < distance27) {
                            distance27 = distance11 + weight;
                            direction27 = direction11;
                        }
                        if (distance25 + weight < distance27) {
                            distance27 = distance25 + weight;
                            direction27 = direction25;
                        }
                        if (distance9 + weight < distance27) {
                            distance27 = distance9 + weight;
                            direction27 = direction9;
                        }
                        if (distance22 + weight < distance27) {
                            distance27 = distance22 + weight;
                            direction27 = direction22;
                        }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
            case 2:
            case 3:
                break;
            default:
                switch (myY) {
                    case 0:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location31);
                        if (distance13 + weight < distance31) {
                            distance31 = distance13 + weight;
                            direction31 = direction13;
                        }
                        if (distance30 + weight < distance31) {
                            distance31 = distance30 + weight;
                            direction31 = direction30;
                        }
                        if (distance23 + weight < distance31) {
                            distance31 = distance23 + weight;
                            direction31 = direction23;
                        }
                        if (distance12 + weight < distance31) {
                            distance31 = distance12 + weight;
                            direction31 = direction12;
                        }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
            case 2:
            case 3:
                break;
            default:
                switch (yOffset) {
                    case 0:
                    case 1:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location32);
                        if (distance14 + weight < distance32) {
                            distance32 = distance14 + weight;
                            direction32 = direction14;
                        }
                        if (distance30 + weight < distance32) {
                            distance32 = distance30 + weight;
                            direction32 = direction30;
                        }
                        if (distance12 + weight < distance32) {
                            distance32 = distance12 + weight;
                            direction32 = direction12;
                        }
                        if (distance24 + weight < distance32) {
                            distance32 = distance24 + weight;
                            direction32 = direction24;
                        }
                }
        }
        switch (myX) {
            case 0:
                break;
            default:
                switch (myY) {
                    case 0:
                    case 1:
                    case 2:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location36);
                        if (distance35 + weight < distance36) {
                            distance36 = distance35 + weight;
                            direction36 = direction35;
                        }
                        if (distance16 + weight < distance36) {
                            distance36 = distance16 + weight;
                            direction36 = direction16;
                        }
                        if (distance21 + weight < distance36) {
                            distance36 = distance21 + weight;
                            direction36 = direction21;
                        }
                        if (distance15 + weight < distance36) {
                            distance36 = distance15 + weight;
                            direction36 = direction15;
                        }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
                break;
            default:
                switch (myY) {
                    case 0:
                    case 1:
                    case 2:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location37);
                        if (distance35 + weight < distance37) {
                            distance37 = distance35 + weight;
                            direction37 = direction35;
                        }
                        if (distance17 + weight < distance37) {
                            distance37 = distance17 + weight;
                            direction37 = direction17;
                        }
                        if (distance15 + weight < distance37) {
                            distance37 = distance15 + weight;
                            direction37 = direction15;
                        }
                        if (distance23 + weight < distance37) {
                            distance37 = distance23 + weight;
                            direction37 = direction23;
                        }
                }
        }
        switch (myX) {
            case 0:
                break;
            default:
                switch (yOffset) {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location41);
                        if (distance40 + weight < distance41) {
                            distance41 = distance40 + weight;
                            direction41 = direction40;
                        }
                        if (distance19 + weight < distance41) {
                            distance41 = distance19 + weight;
                            direction41 = direction19;
                        }
                        if (distance22 + weight < distance41) {
                            distance41 = distance22 + weight;
                            direction41 = direction22;
                        }
                        if (distance18 + weight < distance41) {
                            distance41 = distance18 + weight;
                            direction41 = direction18;
                        }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
                break;
            default:
                switch (yOffset) {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location42);
                        if (distance40 + weight < distance42) {
                            distance42 = distance40 + weight;
                            direction42 = direction40;
                        }
                        if (distance20 + weight < distance42) {
                            distance42 = distance20 + weight;
                            direction42 = direction20;
                        }
                        if (distance18 + weight < distance42) {
                            distance42 = distance18 + weight;
                            direction42 = direction18;
                        }
                        if (distance24 + weight < distance42) {
                            distance42 = distance24 + weight;
                            direction42 = direction24;
                        }
                }
        }
        switch (myX) {
            case 0:
            case 1:
            case 2:
                break;
            default:
                switch (myY) {
                    case 0:
                    case 1:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location28);
                        if (distance21 + weight < distance28) {
                            distance28 = distance21 + weight;
                            direction28 = direction21;
                        }
                        if (distance26 + weight < distance28) {
                            distance28 = distance26 + weight;
                            direction28 = direction26;
                        }
                        if (distance10 + weight < distance28) {
                            distance28 = distance10 + weight;
                            direction28 = direction10;
                        }
                }
        }
        switch (myX) {
            case 0:
            case 1:
            case 2:
                break;
            default:
                switch (yOffset) {
                    case 0:
                    case 1:
                    case 2:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location29);
                        if (distance22 + weight < distance29) {
                            distance29 = distance22 + weight;
                            direction29 = direction22;
                        }
                        if (distance27 + weight < distance29) {
                            distance29 = distance27 + weight;
                            direction29 = direction27;
                        }
                        if (distance11 + weight < distance29) {
                            distance29 = distance11 + weight;
                            direction29 = direction11;
                        }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
            case 2:
            case 3:
                break;
            default:
                switch (myY) {
                    case 0:
                    case 1:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location33);
                        if (distance23 + weight < distance33) {
                            distance33 = distance23 + weight;
                            direction33 = direction23;
                        }
                        if (distance31 + weight < distance33) {
                            distance33 = distance31 + weight;
                            direction33 = direction31;
                        }
                        if (distance13 + weight < distance33) {
                            distance33 = distance13 + weight;
                            direction33 = direction13;
                        }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
            case 2:
            case 3:
                break;
            default:
                switch (yOffset) {
                    case 0:
                    case 1:
                    case 2:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location34);
                        if (distance24 + weight < distance34) {
                            distance34 = distance24 + weight;
                            direction34 = direction24;
                        }
                        if (distance32 + weight < distance34) {
                            distance34 = distance32 + weight;
                            direction34 = direction32;
                        }
                        if (distance14 + weight < distance34) {
                            distance34 = distance14 + weight;
                            direction34 = direction14;
                        }
                }
        }
        switch (myX) {
            case 0:
            case 1:
                break;
            default:
                switch (myY) {
                    case 0:
                    case 1:
                    case 2:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location38);
                        if (distance36 + weight < distance38) {
                            distance38 = distance36 + weight;
                            direction38 = direction36;
                        }
                        if (distance21 + weight < distance38) {
                            distance38 = distance21 + weight;
                            direction38 = direction21;
                        }
                        if (distance16 + weight < distance38) {
                            distance38 = distance16 + weight;
                            direction38 = direction16;
                        }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
            case 2:
                break;
            default:
                switch (myY) {
                    case 0:
                    case 1:
                    case 2:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location39);
                        if (distance37 + weight < distance39) {
                            distance39 = distance37 + weight;
                            direction39 = direction37;
                        }
                        if (distance23 + weight < distance39) {
                            distance39 = distance23 + weight;
                            direction39 = direction23;
                        }
                        if (distance17 + weight < distance39) {
                            distance39 = distance17 + weight;
                            direction39 = direction17;
                        }
                }
        }
        switch (myX) {
            case 0:
            case 1:
                break;
            default:
                switch (yOffset) {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location43);
                        if (distance41 + weight < distance43) {
                            distance43 = distance41 + weight;
                            direction43 = direction41;
                        }
                        if (distance22 + weight < distance43) {
                            distance43 = distance22 + weight;
                            direction43 = direction22;
                        }
                        if (distance19 + weight < distance43) {
                            distance43 = distance19 + weight;
                            direction43 = direction19;
                        }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
            case 2:
                break;
            default:
                switch (yOffset) {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location44);
                        if (distance42 + weight < distance44) {
                            distance44 = distance42 + weight;
                            direction44 = direction42;
                        }
                        if (distance24 + weight < distance44) {
                            distance44 = distance24 + weight;
                            direction44 = direction24;
                        }
                        if (distance20 + weight < distance44) {
                            distance44 = distance20 + weight;
                            direction44 = direction20;
                        }
                }
        }
        switch (myX) {
            case 0:
            case 1:
            case 2:
            case 3:
                break;
            default:
                weight = 1.0 + rc.senseRubble(location49);
                if (distance25 + weight < distance49) {
                    distance49 = distance25 + weight;
                    direction49 = direction25;
                }
                if (distance26 + weight < distance49) {
                    distance49 = distance26 + weight;
                    direction49 = direction26;
                }
                if (distance27 + weight < distance49) {
                    distance49 = distance27 + weight;
                    direction49 = direction27;
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
                break;
            default:
                weight = 1.0 + rc.senseRubble(location56);
                if (distance30 + weight < distance56) {
                    distance56 = distance30 + weight;
                    direction56 = direction30;
                }
                if (distance31 + weight < distance56) {
                    distance56 = distance31 + weight;
                    direction56 = direction31;
                }
                if (distance32 + weight < distance56) {
                    distance56 = distance32 + weight;
                    direction56 = direction32;
                }
        }
        switch (myY) {
            case 0:
            case 1:
            case 2:
            case 3:
                break;
            default:
                weight = 1.0 + rc.senseRubble(location63);
                if (distance35 + weight < distance63) {
                    distance63 = distance35 + weight;
                    direction63 = direction35;
                }
                if (distance36 + weight < distance63) {
                    distance63 = distance36 + weight;
                    direction63 = direction36;
                }
                if (distance37 + weight < distance63) {
                    distance63 = distance37 + weight;
                    direction63 = direction37;
                }
        }
        switch (yOffset) {
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
                break;
            default:
                weight = 1.0 + rc.senseRubble(location70);
                if (distance40 + weight < distance70) {
                    distance70 = distance40 + weight;
                    direction70 = direction40;
                }
                if (distance41 + weight < distance70) {
                    distance70 = distance41 + weight;
                    direction70 = direction41;
                }
                if (distance42 + weight < distance70) {
                    distance70 = distance42 + weight;
                    direction70 = direction42;
                }
        }
        switch (myX) {
            case 0:
            case 1:
            case 2:
            case 3:
                break;
            default:
                switch (myY) {
                    case 0:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location50);
                        if (distance26 + weight < distance50) {
                            distance50 = distance26 + weight;
                            direction50 = direction26;
                        }
                        if (distance49 + weight < distance50) {
                            distance50 = distance49 + weight;
                            direction50 = direction49;
                        }
                        if (distance28 + weight < distance50) {
                            distance50 = distance28 + weight;
                            direction50 = direction28;
                        }
                        if (distance25 + weight < distance50) {
                            distance50 = distance25 + weight;
                            direction50 = direction25;
                        }
                }
        }
        switch (myX) {
            case 0:
            case 1:
            case 2:
            case 3:
                break;
            default:
                switch (yOffset) {
                    case 0:
                    case 1:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location51);
                        if (distance27 + weight < distance51) {
                            distance51 = distance27 + weight;
                            direction51 = direction27;
                        }
                        if (distance49 + weight < distance51) {
                            distance51 = distance49 + weight;
                            direction51 = direction49;
                        }
                        if (distance25 + weight < distance51) {
                            distance51 = distance25 + weight;
                            direction51 = direction25;
                        }
                        if (distance29 + weight < distance51) {
                            distance51 = distance29 + weight;
                            direction51 = direction29;
                        }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
                break;
            default:
                switch (myY) {
                    case 0:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location57);
                        if (distance31 + weight < distance57) {
                            distance57 = distance31 + weight;
                            direction57 = direction31;
                        }
                        if (distance56 + weight < distance57) {
                            distance57 = distance56 + weight;
                            direction57 = direction56;
                        }
                        if (distance33 + weight < distance57) {
                            distance57 = distance33 + weight;
                            direction57 = direction33;
                        }
                        if (distance30 + weight < distance57) {
                            distance57 = distance30 + weight;
                            direction57 = direction30;
                        }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
                break;
            default:
                switch (yOffset) {
                    case 0:
                    case 1:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location58);
                        if (distance32 + weight < distance58) {
                            distance58 = distance32 + weight;
                            direction58 = direction32;
                        }
                        if (distance56 + weight < distance58) {
                            distance58 = distance56 + weight;
                            direction58 = direction56;
                        }
                        if (distance30 + weight < distance58) {
                            distance58 = distance30 + weight;
                            direction58 = direction30;
                        }
                        if (distance34 + weight < distance58) {
                            distance58 = distance34 + weight;
                            direction58 = direction34;
                        }
                }
        }
        switch (myX) {
            case 0:
                break;
            default:
                switch (myY) {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location64);
                        if (distance63 + weight < distance64) {
                            distance64 = distance63 + weight;
                            direction64 = direction63;
                        }
                        if (distance36 + weight < distance64) {
                            distance64 = distance36 + weight;
                            direction64 = direction36;
                        }
                        if (distance38 + weight < distance64) {
                            distance64 = distance38 + weight;
                            direction64 = direction38;
                        }
                        if (distance35 + weight < distance64) {
                            distance64 = distance35 + weight;
                            direction64 = direction35;
                        }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
                break;
            default:
                switch (myY) {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location65);
                        if (distance63 + weight < distance65) {
                            distance65 = distance63 + weight;
                            direction65 = direction63;
                        }
                        if (distance37 + weight < distance65) {
                            distance65 = distance37 + weight;
                            direction65 = direction37;
                        }
                        if (distance35 + weight < distance65) {
                            distance65 = distance35 + weight;
                            direction65 = direction35;
                        }
                        if (distance39 + weight < distance65) {
                            distance65 = distance39 + weight;
                            direction65 = direction39;
                        }
                }
        }
        switch (myX) {
            case 0:
                break;
            default:
                switch (yOffset) {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location71);
                        if (distance70 + weight < distance71) {
                            distance71 = distance70 + weight;
                            direction71 = direction70;
                        }
                        if (distance41 + weight < distance71) {
                            distance71 = distance41 + weight;
                            direction71 = direction41;
                        }
                        if (distance43 + weight < distance71) {
                            distance71 = distance43 + weight;
                            direction71 = direction43;
                        }
                        if (distance40 + weight < distance71) {
                            distance71 = distance40 + weight;
                            direction71 = direction40;
                        }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
                break;
            default:
                switch (yOffset) {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location72);
                        if (distance70 + weight < distance72) {
                            distance72 = distance70 + weight;
                            direction72 = direction70;
                        }
                        if (distance42 + weight < distance72) {
                            distance72 = distance42 + weight;
                            direction72 = direction42;
                        }
                        if (distance40 + weight < distance72) {
                            distance72 = distance40 + weight;
                            direction72 = direction40;
                        }
                        if (distance44 + weight < distance72) {
                            distance72 = distance44 + weight;
                            direction72 = direction44;
                        }
                }
        }
        switch (myX) {
            case 0:
            case 1:
            case 2:
                break;
            default:
                switch (myY) {
                    case 0:
                    case 1:
                    case 2:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location45);
                        if (distance38 + weight < distance45) {
                            distance45 = distance38 + weight;
                            direction45 = direction38;
                        }
                        if (distance28 + weight < distance45) {
                            distance45 = distance28 + weight;
                            direction45 = direction28;
                        }
                        if (distance21 + weight < distance45) {
                            distance45 = distance21 + weight;
                            direction45 = direction21;
                        }
                }
        }
        switch (myX) {
            case 0:
            case 1:
            case 2:
                break;
            default:
                switch (yOffset) {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location46);
                        if (distance43 + weight < distance46) {
                            distance46 = distance43 + weight;
                            direction46 = direction43;
                        }
                        if (distance29 + weight < distance46) {
                            distance46 = distance29 + weight;
                            direction46 = direction29;
                        }
                        if (distance22 + weight < distance46) {
                            distance46 = distance22 + weight;
                            direction46 = direction22;
                        }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
            case 2:
            case 3:
                break;
            default:
                switch (myY) {
                    case 0:
                    case 1:
                    case 2:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location47);
                        if (distance39 + weight < distance47) {
                            distance47 = distance39 + weight;
                            direction47 = direction39;
                        }
                        if (distance33 + weight < distance47) {
                            distance47 = distance33 + weight;
                            direction47 = direction33;
                        }
                        if (distance23 + weight < distance47) {
                            distance47 = distance23 + weight;
                            direction47 = direction23;
                        }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
            case 2:
            case 3:
                break;
            default:
                switch (yOffset) {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location48);
                        if (distance44 + weight < distance48) {
                            distance48 = distance44 + weight;
                            direction48 = direction44;
                        }
                        if (distance34 + weight < distance48) {
                            distance48 = distance34 + weight;
                            direction48 = direction34;
                        }
                        if (distance24 + weight < distance48) {
                            distance48 = distance24 + weight;
                            direction48 = direction24;
                        }
                }
        }
        switch (myX) {
            case 0:
            case 1:
            case 2:
            case 3:
                break;
            default:
                switch (myY) {
                    case 0:
                    case 1:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location52);
                        if (distance28 + weight < distance52) {
                            distance52 = distance28 + weight;
                            direction52 = direction28;
                        }
                        if (distance50 + weight < distance52) {
                            distance52 = distance50 + weight;
                            direction52 = direction50;
                        }
                        if (distance45 + weight < distance52) {
                            distance52 = distance45 + weight;
                            direction52 = direction45;
                        }
                        if (distance26 + weight < distance52) {
                            distance52 = distance26 + weight;
                            direction52 = direction26;
                        }
                }
        }
        switch (myX) {
            case 0:
            case 1:
            case 2:
            case 3:
                break;
            default:
                switch (yOffset) {
                    case 0:
                    case 1:
                    case 2:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location53);
                        if (distance29 + weight < distance53) {
                            distance53 = distance29 + weight;
                            direction53 = direction29;
                        }
                        if (distance51 + weight < distance53) {
                            distance53 = distance51 + weight;
                            direction53 = direction51;
                        }
                        if (distance27 + weight < distance53) {
                            distance53 = distance27 + weight;
                            direction53 = direction27;
                        }
                        if (distance46 + weight < distance53) {
                            distance53 = distance46 + weight;
                            direction53 = direction46;
                        }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
                break;
            default:
                switch (myY) {
                    case 0:
                    case 1:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location59);
                        if (distance33 + weight < distance59) {
                            distance59 = distance33 + weight;
                            direction59 = direction33;
                        }
                        if (distance57 + weight < distance59) {
                            distance59 = distance57 + weight;
                            direction59 = direction57;
                        }
                        if (distance47 + weight < distance59) {
                            distance59 = distance47 + weight;
                            direction59 = direction47;
                        }
                        if (distance31 + weight < distance59) {
                            distance59 = distance31 + weight;
                            direction59 = direction31;
                        }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
                break;
            default:
                switch (yOffset) {
                    case 0:
                    case 1:
                    case 2:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location60);
                        if (distance34 + weight < distance60) {
                            distance60 = distance34 + weight;
                            direction60 = direction34;
                        }
                        if (distance58 + weight < distance60) {
                            distance60 = distance58 + weight;
                            direction60 = direction58;
                        }
                        if (distance32 + weight < distance60) {
                            distance60 = distance32 + weight;
                            direction60 = direction32;
                        }
                        if (distance48 + weight < distance60) {
                            distance60 = distance48 + weight;
                            direction60 = direction48;
                        }
                }
        }
        switch (myX) {
            case 0:
            case 1:
                break;
            default:
                switch (myY) {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location66);
                        if (distance64 + weight < distance66) {
                            distance66 = distance64 + weight;
                            direction66 = direction64;
                        }
                        if (distance38 + weight < distance66) {
                            distance66 = distance38 + weight;
                            direction66 = direction38;
                        }
                        if (distance45 + weight < distance66) {
                            distance66 = distance45 + weight;
                            direction66 = direction45;
                        }
                        if (distance36 + weight < distance66) {
                            distance66 = distance36 + weight;
                            direction66 = direction36;
                        }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
            case 2:
                break;
            default:
                switch (myY) {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location67);
                        if (distance65 + weight < distance67) {
                            distance67 = distance65 + weight;
                            direction67 = direction65;
                        }
                        if (distance39 + weight < distance67) {
                            distance67 = distance39 + weight;
                            direction67 = direction39;
                        }
                        if (distance37 + weight < distance67) {
                            distance67 = distance37 + weight;
                            direction67 = direction37;
                        }
                        if (distance47 + weight < distance67) {
                            distance67 = distance47 + weight;
                            direction67 = direction47;
                        }
                }
        }
        switch (myX) {
            case 0:
            case 1:
                break;
            default:
                switch (yOffset) {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location73);
                        if (distance71 + weight < distance73) {
                            distance73 = distance71 + weight;
                            direction73 = direction71;
                        }
                        if (distance43 + weight < distance73) {
                            distance73 = distance43 + weight;
                            direction73 = direction43;
                        }
                        if (distance46 + weight < distance73) {
                            distance73 = distance46 + weight;
                            direction73 = direction46;
                        }
                        if (distance41 + weight < distance73) {
                            distance73 = distance41 + weight;
                            direction73 = direction41;
                        }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
            case 2:
                break;
            default:
                switch (yOffset) {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location74);
                        if (distance72 + weight < distance74) {
                            distance74 = distance72 + weight;
                            direction74 = direction72;
                        }
                        if (distance44 + weight < distance74) {
                            distance74 = distance44 + weight;
                            direction74 = direction44;
                        }
                        if (distance42 + weight < distance74) {
                            distance74 = distance42 + weight;
                            direction74 = direction42;
                        }
                        if (distance48 + weight < distance74) {
                            distance74 = distance48 + weight;
                            direction74 = direction48;
                        }
                }
        }
        switch (myX) {
            case 0:
            case 1:
            case 2:
            case 3:
                break;
            default:
                switch (myY) {
                    case 0:
                    case 1:
                    case 2:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location54);
                        if (distance45 + weight < distance54) {
                            distance54 = distance45 + weight;
                            direction54 = direction45;
                        }
                        if (distance52 + weight < distance54) {
                            distance54 = distance52 + weight;
                            direction54 = direction52;
                        }
                        if (distance28 + weight < distance54) {
                            distance54 = distance28 + weight;
                            direction54 = direction28;
                        }
                }
        }
        switch (myX) {
            case 0:
            case 1:
            case 2:
            case 3:
                break;
            default:
                switch (yOffset) {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location55);
                        if (distance46 + weight < distance55) {
                            distance55 = distance46 + weight;
                            direction55 = direction46;
                        }
                        if (distance53 + weight < distance55) {
                            distance55 = distance53 + weight;
                            direction55 = direction53;
                        }
                        if (distance29 + weight < distance55) {
                            distance55 = distance29 + weight;
                            direction55 = direction29;
                        }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
                break;
            default:
                switch (myY) {
                    case 0:
                    case 1:
                    case 2:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location61);
                        if (distance47 + weight < distance61) {
                            distance61 = distance47 + weight;
                            direction61 = direction47;
                        }
                        if (distance59 + weight < distance61) {
                            distance61 = distance59 + weight;
                            direction61 = direction59;
                        }
                        if (distance33 + weight < distance61) {
                            distance61 = distance33 + weight;
                            direction61 = direction33;
                        }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
                break;
            default:
                switch (yOffset) {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location62);
                        if (distance48 + weight < distance62) {
                            distance62 = distance48 + weight;
                            direction62 = direction48;
                        }
                        if (distance60 + weight < distance62) {
                            distance62 = distance60 + weight;
                            direction62 = direction60;
                        }
                        if (distance34 + weight < distance62) {
                            distance62 = distance34 + weight;
                            direction62 = direction34;
                        }
                }
        }
        switch (myX) {
            case 0:
            case 1:
            case 2:
                break;
            default:
                switch (myY) {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location68);
                        if (distance66 + weight < distance68) {
                            distance68 = distance66 + weight;
                            direction68 = direction66;
                        }
                        if (distance45 + weight < distance68) {
                            distance68 = distance45 + weight;
                            direction68 = direction45;
                        }
                        if (distance38 + weight < distance68) {
                            distance68 = distance38 + weight;
                            direction68 = direction38;
                        }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
            case 2:
            case 3:
                break;
            default:
                switch (myY) {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location69);
                        if (distance67 + weight < distance69) {
                            distance69 = distance67 + weight;
                            direction69 = direction67;
                        }
                        if (distance47 + weight < distance69) {
                            distance69 = distance47 + weight;
                            direction69 = direction47;
                        }
                        if (distance39 + weight < distance69) {
                            distance69 = distance39 + weight;
                            direction69 = direction39;
                        }
                }
        }
        switch (myX) {
            case 0:
            case 1:
            case 2:
                break;
            default:
                switch (yOffset) {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location75);
                        if (distance73 + weight < distance75) {
                            distance75 = distance73 + weight;
                            direction75 = direction73;
                        }
                        if (distance46 + weight < distance75) {
                            distance75 = distance46 + weight;
                            direction75 = direction46;
                        }
                        if (distance43 + weight < distance75) {
                            distance75 = distance43 + weight;
                            direction75 = direction43;
                        }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
            case 2:
            case 3:
                break;
            default:
                switch (yOffset) {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location76);
                        if (distance74 + weight < distance76) {
                            distance76 = distance74 + weight;
                            direction76 = direction74;
                        }
                        if (distance48 + weight < distance76) {
                            distance76 = distance48 + weight;
                            direction76 = direction48;
                        }
                        if (distance44 + weight < distance76) {
                            distance76 = distance44 + weight;
                            direction76 = direction44;
                        }
                }
        }
        switch (myX) {
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
                break;
            default:
                weight = 1.0 + rc.senseRubble(location81);
                if (distance49 + weight < distance81) {
                    distance81 = distance49 + weight;
                    direction81 = direction49;
                }
                if (distance50 + weight < distance81) {
                    distance81 = distance50 + weight;
                    direction81 = direction50;
                }
                if (distance51 + weight < distance81) {
                    distance81 = distance51 + weight;
                    direction81 = direction51;
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
                break;
            default:
                weight = 1.0 + rc.senseRubble(location88);
                if (distance56 + weight < distance88) {
                    distance88 = distance56 + weight;
                    direction88 = direction56;
                }
                if (distance57 + weight < distance88) {
                    distance88 = distance57 + weight;
                    direction88 = direction57;
                }
                if (distance58 + weight < distance88) {
                    distance88 = distance58 + weight;
                    direction88 = direction58;
                }
        }
        switch (myY) {
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
                break;
            default:
                weight = 1.0 + rc.senseRubble(location95);
                if (distance63 + weight < distance95) {
                    distance95 = distance63 + weight;
                    direction95 = direction63;
                }
                if (distance64 + weight < distance95) {
                    distance95 = distance64 + weight;
                    direction95 = direction64;
                }
                if (distance65 + weight < distance95) {
                    distance95 = distance65 + weight;
                    direction95 = direction65;
                }
        }
        switch (yOffset) {
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
                break;
            default:
                weight = 1.0 + rc.senseRubble(location102);
                if (distance70 + weight < distance102) {
                    distance102 = distance70 + weight;
                    direction102 = direction70;
                }
                if (distance71 + weight < distance102) {
                    distance102 = distance71 + weight;
                    direction102 = direction71;
                }
                if (distance72 + weight < distance102) {
                    distance102 = distance72 + weight;
                    direction102 = direction72;
                }
        }
        switch (myX) {
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
                break;
            default:
                switch (myY) {
                    case 0:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location82);
                        if (distance50 + weight < distance82) {
                            distance82 = distance50 + weight;
                            direction82 = direction50;
                        }
                        if (distance81 + weight < distance82) {
                            distance82 = distance81 + weight;
                            direction82 = direction81;
                        }
                        if (distance52 + weight < distance82) {
                            distance82 = distance52 + weight;
                            direction82 = direction52;
                        }
                        if (distance49 + weight < distance82) {
                            distance82 = distance49 + weight;
                            direction82 = direction49;
                        }
                }
        }
        switch (myX) {
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
                break;
            default:
                switch (yOffset) {
                    case 0:
                    case 1:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location83);
                        if (distance51 + weight < distance83) {
                            distance83 = distance51 + weight;
                            direction83 = direction51;
                        }
                        if (distance81 + weight < distance83) {
                            distance83 = distance81 + weight;
                            direction83 = direction81;
                        }
                        if (distance49 + weight < distance83) {
                            distance83 = distance49 + weight;
                            direction83 = direction49;
                        }
                        if (distance53 + weight < distance83) {
                            distance83 = distance53 + weight;
                            direction83 = direction53;
                        }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
                break;
            default:
                switch (myY) {
                    case 0:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location89);
                        if (distance57 + weight < distance89) {
                            distance89 = distance57 + weight;
                            direction89 = direction57;
                        }
                        if (distance88 + weight < distance89) {
                            distance89 = distance88 + weight;
                            direction89 = direction88;
                        }
                        if (distance59 + weight < distance89) {
                            distance89 = distance59 + weight;
                            direction89 = direction59;
                        }
                        if (distance56 + weight < distance89) {
                            distance89 = distance56 + weight;
                            direction89 = direction56;
                        }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
                break;
            default:
                switch (yOffset) {
                    case 0:
                    case 1:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location90);
                        if (distance58 + weight < distance90) {
                            distance90 = distance58 + weight;
                            direction90 = direction58;
                        }
                        if (distance88 + weight < distance90) {
                            distance90 = distance88 + weight;
                            direction90 = direction88;
                        }
                        if (distance56 + weight < distance90) {
                            distance90 = distance56 + weight;
                            direction90 = direction56;
                        }
                        if (distance60 + weight < distance90) {
                            distance90 = distance60 + weight;
                            direction90 = direction60;
                        }
                }
        }
        switch (myX) {
            case 0:
                break;
            default:
                switch (myY) {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location96);
                        if (distance95 + weight < distance96) {
                            distance96 = distance95 + weight;
                            direction96 = direction95;
                        }
                        if (distance64 + weight < distance96) {
                            distance96 = distance64 + weight;
                            direction96 = direction64;
                        }
                        if (distance66 + weight < distance96) {
                            distance96 = distance66 + weight;
                            direction96 = direction66;
                        }
                        if (distance63 + weight < distance96) {
                            distance96 = distance63 + weight;
                            direction96 = direction63;
                        }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
                break;
            default:
                switch (myY) {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location97);
                        if (distance95 + weight < distance97) {
                            distance97 = distance95 + weight;
                            direction97 = direction95;
                        }
                        if (distance65 + weight < distance97) {
                            distance97 = distance65 + weight;
                            direction97 = direction65;
                        }
                        if (distance63 + weight < distance97) {
                            distance97 = distance63 + weight;
                            direction97 = direction63;
                        }
                        if (distance67 + weight < distance97) {
                            distance97 = distance67 + weight;
                            direction97 = direction67;
                        }
                }
        }
        switch (myX) {
            case 0:
                break;
            default:
                switch (yOffset) {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location103);
                        if (distance102 + weight < distance103) {
                            distance103 = distance102 + weight;
                            direction103 = direction102;
                        }
                        if (distance71 + weight < distance103) {
                            distance103 = distance71 + weight;
                            direction103 = direction71;
                        }
                        if (distance73 + weight < distance103) {
                            distance103 = distance73 + weight;
                            direction103 = direction73;
                        }
                        if (distance70 + weight < distance103) {
                            distance103 = distance70 + weight;
                            direction103 = direction70;
                        }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
                break;
            default:
                switch (yOffset) {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location104);
                        if (distance102 + weight < distance104) {
                            distance104 = distance102 + weight;
                            direction104 = direction102;
                        }
                        if (distance72 + weight < distance104) {
                            distance104 = distance72 + weight;
                            direction104 = direction72;
                        }
                        if (distance70 + weight < distance104) {
                            distance104 = distance70 + weight;
                            direction104 = direction70;
                        }
                        if (distance74 + weight < distance104) {
                            distance104 = distance74 + weight;
                            direction104 = direction74;
                        }
                }
        }
        switch (myX) {
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
                break;
            default:
                switch (myY) {
                    case 0:
                    case 1:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location84);
                        if (distance52 + weight < distance84) {
                            distance84 = distance52 + weight;
                            direction84 = direction52;
                        }
                        if (distance82 + weight < distance84) {
                            distance84 = distance82 + weight;
                            direction84 = direction82;
                        }
                        if (distance54 + weight < distance84) {
                            distance84 = distance54 + weight;
                            direction84 = direction54;
                        }
                        if (distance50 + weight < distance84) {
                            distance84 = distance50 + weight;
                            direction84 = direction50;
                        }
                }
        }
        switch (myX) {
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
                break;
            default:
                switch (yOffset) {
                    case 0:
                    case 1:
                    case 2:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location85);
                        if (distance53 + weight < distance85) {
                            distance85 = distance53 + weight;
                            direction85 = direction53;
                        }
                        if (distance83 + weight < distance85) {
                            distance85 = distance83 + weight;
                            direction85 = direction83;
                        }
                        if (distance51 + weight < distance85) {
                            distance85 = distance51 + weight;
                            direction85 = direction51;
                        }
                        if (distance55 + weight < distance85) {
                            distance85 = distance55 + weight;
                            direction85 = direction55;
                        }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
                break;
            default:
                switch (myY) {
                    case 0:
                    case 1:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location91);
                        if (distance59 + weight < distance91) {
                            distance91 = distance59 + weight;
                            direction91 = direction59;
                        }
                        if (distance89 + weight < distance91) {
                            distance91 = distance89 + weight;
                            direction91 = direction89;
                        }
                        if (distance61 + weight < distance91) {
                            distance91 = distance61 + weight;
                            direction91 = direction61;
                        }
                        if (distance57 + weight < distance91) {
                            distance91 = distance57 + weight;
                            direction91 = direction57;
                        }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
                break;
            default:
                switch (yOffset) {
                    case 0:
                    case 1:
                    case 2:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location92);
                        if (distance60 + weight < distance92) {
                            distance92 = distance60 + weight;
                            direction92 = direction60;
                        }
                        if (distance90 + weight < distance92) {
                            distance92 = distance90 + weight;
                            direction92 = direction90;
                        }
                        if (distance58 + weight < distance92) {
                            distance92 = distance58 + weight;
                            direction92 = direction58;
                        }
                        if (distance62 + weight < distance92) {
                            distance92 = distance62 + weight;
                            direction92 = direction62;
                        }
                }
        }
        switch (myX) {
            case 0:
            case 1:
                break;
            default:
                switch (myY) {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location98);
                        if (distance96 + weight < distance98) {
                            distance98 = distance96 + weight;
                            direction98 = direction96;
                        }
                        if (distance66 + weight < distance98) {
                            distance98 = distance66 + weight;
                            direction98 = direction66;
                        }
                        if (distance68 + weight < distance98) {
                            distance98 = distance68 + weight;
                            direction98 = direction68;
                        }
                        if (distance64 + weight < distance98) {
                            distance98 = distance64 + weight;
                            direction98 = direction64;
                        }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
            case 2:
                break;
            default:
                switch (myY) {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location99);
                        if (distance97 + weight < distance99) {
                            distance99 = distance97 + weight;
                            direction99 = direction97;
                        }
                        if (distance67 + weight < distance99) {
                            distance99 = distance67 + weight;
                            direction99 = direction67;
                        }
                        if (distance65 + weight < distance99) {
                            distance99 = distance65 + weight;
                            direction99 = direction65;
                        }
                        if (distance69 + weight < distance99) {
                            distance99 = distance69 + weight;
                            direction99 = direction69;
                        }
                }
        }
        switch (myX) {
            case 0:
            case 1:
                break;
            default:
                switch (yOffset) {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location105);
                        if (distance103 + weight < distance105) {
                            distance105 = distance103 + weight;
                            direction105 = direction103;
                        }
                        if (distance73 + weight < distance105) {
                            distance105 = distance73 + weight;
                            direction105 = direction73;
                        }
                        if (distance75 + weight < distance105) {
                            distance105 = distance75 + weight;
                            direction105 = direction75;
                        }
                        if (distance71 + weight < distance105) {
                            distance105 = distance71 + weight;
                            direction105 = direction71;
                        }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
            case 2:
                break;
            default:
                switch (yOffset) {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location106);
                        if (distance104 + weight < distance106) {
                            distance106 = distance104 + weight;
                            direction106 = direction104;
                        }
                        if (distance74 + weight < distance106) {
                            distance106 = distance74 + weight;
                            direction106 = direction74;
                        }
                        if (distance72 + weight < distance106) {
                            distance106 = distance72 + weight;
                            direction106 = direction72;
                        }
                        if (distance76 + weight < distance106) {
                            distance106 = distance76 + weight;
                            direction106 = direction76;
                        }
                }
        }
        switch (myX) {
            case 0:
            case 1:
            case 2:
            case 3:
                break;
            default:
                switch (myY) {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location77);
                        if (distance68 + weight < distance77) {
                            distance77 = distance68 + weight;
                            direction77 = direction68;
                        }
                        if (distance54 + weight < distance77) {
                            distance77 = distance54 + weight;
                            direction77 = direction54;
                        }
                        if (distance45 + weight < distance77) {
                            distance77 = distance45 + weight;
                            direction77 = direction45;
                        }
                }
        }
        switch (myX) {
            case 0:
            case 1:
            case 2:
            case 3:
                break;
            default:
                switch (yOffset) {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location78);
                        if (distance75 + weight < distance78) {
                            distance78 = distance75 + weight;
                            direction78 = direction75;
                        }
                        if (distance55 + weight < distance78) {
                            distance78 = distance55 + weight;
                            direction78 = direction55;
                        }
                        if (distance46 + weight < distance78) {
                            distance78 = distance46 + weight;
                            direction78 = direction46;
                        }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
                break;
            default:
                switch (myY) {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location79);
                        if (distance69 + weight < distance79) {
                            distance79 = distance69 + weight;
                            direction79 = direction69;
                        }
                        if (distance61 + weight < distance79) {
                            distance79 = distance61 + weight;
                            direction79 = direction61;
                        }
                        if (distance47 + weight < distance79) {
                            distance79 = distance47 + weight;
                            direction79 = direction47;
                        }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
                break;
            default:
                switch (yOffset) {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location80);
                        if (distance76 + weight < distance80) {
                            distance80 = distance76 + weight;
                            direction80 = direction76;
                        }
                        if (distance62 + weight < distance80) {
                            distance80 = distance62 + weight;
                            direction80 = direction62;
                        }
                        if (distance48 + weight < distance80) {
                            distance80 = distance48 + weight;
                            direction80 = direction48;
                        }
                }
        }
        switch (myX) {
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
                break;
            default:
                switch (myY) {
                    case 0:
                    case 1:
                    case 2:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location86);
                        if (distance54 + weight < distance86) {
                            distance86 = distance54 + weight;
                            direction86 = direction54;
                        }
                        if (distance84 + weight < distance86) {
                            distance86 = distance84 + weight;
                            direction86 = direction84;
                        }
                        if (distance77 + weight < distance86) {
                            distance86 = distance77 + weight;
                            direction86 = direction77;
                        }
                        if (distance52 + weight < distance86) {
                            distance86 = distance52 + weight;
                            direction86 = direction52;
                        }
                }
        }
        switch (myX) {
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
                break;
            default:
                switch (yOffset) {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location87);
                        if (distance55 + weight < distance87) {
                            distance87 = distance55 + weight;
                            direction87 = direction55;
                        }
                        if (distance85 + weight < distance87) {
                            distance87 = distance85 + weight;
                            direction87 = direction85;
                        }
                        if (distance53 + weight < distance87) {
                            distance87 = distance53 + weight;
                            direction87 = direction53;
                        }
                        if (distance78 + weight < distance87) {
                            distance87 = distance78 + weight;
                            direction87 = direction78;
                        }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
                break;
            default:
                switch (myY) {
                    case 0:
                    case 1:
                    case 2:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location93);
                        if (distance61 + weight < distance93) {
                            distance93 = distance61 + weight;
                            direction93 = direction61;
                        }
                        if (distance91 + weight < distance93) {
                            distance93 = distance91 + weight;
                            direction93 = direction91;
                        }
                        if (distance79 + weight < distance93) {
                            distance93 = distance79 + weight;
                            direction93 = direction79;
                        }
                        if (distance59 + weight < distance93) {
                            distance93 = distance59 + weight;
                            direction93 = direction59;
                        }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
                break;
            default:
                switch (yOffset) {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location94);
                        if (distance62 + weight < distance94) {
                            distance94 = distance62 + weight;
                            direction94 = direction62;
                        }
                        if (distance92 + weight < distance94) {
                            distance94 = distance92 + weight;
                            direction94 = direction92;
                        }
                        if (distance60 + weight < distance94) {
                            distance94 = distance60 + weight;
                            direction94 = direction60;
                        }
                        if (distance80 + weight < distance94) {
                            distance94 = distance80 + weight;
                            direction94 = direction80;
                        }
                }
        }
        switch (myX) {
            case 0:
            case 1:
            case 2:
                break;
            default:
                switch (myY) {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location100);
                        if (distance98 + weight < distance100) {
                            distance100 = distance98 + weight;
                            direction100 = direction98;
                        }
                        if (distance68 + weight < distance100) {
                            distance100 = distance68 + weight;
                            direction100 = direction68;
                        }
                        if (distance77 + weight < distance100) {
                            distance100 = distance77 + weight;
                            direction100 = direction77;
                        }
                        if (distance66 + weight < distance100) {
                            distance100 = distance66 + weight;
                            direction100 = direction66;
                        }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
            case 2:
            case 3:
                break;
            default:
                switch (myY) {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location101);
                        if (distance99 + weight < distance101) {
                            distance101 = distance99 + weight;
                            direction101 = direction99;
                        }
                        if (distance69 + weight < distance101) {
                            distance101 = distance69 + weight;
                            direction101 = direction69;
                        }
                        if (distance67 + weight < distance101) {
                            distance101 = distance67 + weight;
                            direction101 = direction67;
                        }
                        if (distance79 + weight < distance101) {
                            distance101 = distance79 + weight;
                            direction101 = direction79;
                        }
                }
        }
        switch (myX) {
            case 0:
            case 1:
            case 2:
                break;
            default:
                switch (yOffset) {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location107);
                        if (distance105 + weight < distance107) {
                            distance107 = distance105 + weight;
                            direction107 = direction105;
                        }
                        if (distance75 + weight < distance107) {
                            distance107 = distance75 + weight;
                            direction107 = direction75;
                        }
                        if (distance78 + weight < distance107) {
                            distance107 = distance78 + weight;
                            direction107 = direction78;
                        }
                        if (distance73 + weight < distance107) {
                            distance107 = distance73 + weight;
                            direction107 = direction73;
                        }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
            case 2:
            case 3:
                break;
            default:
                switch (yOffset) {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                        break;
                    default:
                        weight = 1.0 + rc.senseRubble(location108);
                        if (distance106 + weight < distance108) {
                            distance108 = distance106 + weight;
                            direction108 = direction106;
                        }
                        if (distance76 + weight < distance108) {
                            distance108 = distance76 + weight;
                            direction108 = direction76;
                        }
                        if (distance74 + weight < distance108) {
                            distance108 = distance74 + weight;
                            direction108 = direction74;
                        }
                        if (distance80 + weight < distance108) {
                            distance108 = distance80 + weight;
                            direction108 = direction80;
                        }
                }
        }

        switch (target.x - myX) {
            case -5:
                switch (target.y - myY) {
                    case -3:
                        return direction86;
                    case -2:
                        return direction84;
                    case -1:
                        return direction82;
                    case 0:
                        return direction81;
                    case 1:
                        return direction83;
                    case 2:
                        return direction85;
                    case 3:
                        return direction87;
                }
                break;
            case -4:
                switch (target.y - myY) {
                    case -4:
                        return direction77;
                    case -3:
                        return direction54;
                    case -2:
                        return direction52;
                    case -1:
                        return direction50;
                    case 0:
                        return direction49;
                    case 1:
                        return direction51;
                    case 2:
                        return direction53;
                    case 3:
                        return direction55;
                    case 4:
                        return direction78;
                }
                break;
            case -3:
                switch (target.y - myY) {
                    case -5:
                        return direction100;
                    case -4:
                        return direction68;
                    case -3:
                        return direction45;
                    case -2:
                        return direction28;
                    case -1:
                        return direction26;
                    case 0:
                        return direction25;
                    case 1:
                        return direction27;
                    case 2:
                        return direction29;
                    case 3:
                        return direction46;
                    case 4:
                        return direction75;
                    case 5:
                        return direction107;
                }
                break;
            case -2:
                switch (target.y - myY) {
                    case -5:
                        return direction98;
                    case -4:
                        return direction66;
                    case -3:
                        return direction38;
                    case -2:
                        return direction21;
                    case -1:
                        return direction10;
                    case 0:
                        return direction9;
                    case 1:
                        return direction11;
                    case 2:
                        return direction22;
                    case 3:
                        return direction43;
                    case 4:
                        return direction73;
                    case 5:
                        return direction105;
                }
                break;
            case -1:
                switch (target.y - myY) {
                    case -5:
                        return direction96;
                    case -4:
                        return direction64;
                    case -3:
                        return direction36;
                    case -2:
                        return direction16;
                    case -1:
                        return direction5;
                    case 0:
                        return direction1;
                    case 1:
                        return direction6;
                    case 2:
                        return direction19;
                    case 3:
                        return direction41;
                    case 4:
                        return direction71;
                    case 5:
                        return direction103;
                }
                break;
            case 0:
                switch (target.y - myY) {
                    case -5:
                        return direction95;
                    case -4:
                        return direction63;
                    case -3:
                        return direction35;
                    case -2:
                        return direction15;
                    case -1:
                        return direction3;
                    case 1:
                        return direction4;
                    case 2:
                        return direction18;
                    case 3:
                        return direction40;
                    case 4:
                        return direction70;
                    case 5:
                        return direction102;
                }
                break;
            case 1:
                switch (target.y - myY) {
                    case -5:
                        return direction97;
                    case -4:
                        return direction65;
                    case -3:
                        return direction37;
                    case -2:
                        return direction17;
                    case -1:
                        return direction7;
                    case 0:
                        return direction2;
                    case 1:
                        return direction8;
                    case 2:
                        return direction20;
                    case 3:
                        return direction42;
                    case 4:
                        return direction72;
                    case 5:
                        return direction104;
                }
                break;
            case 2:
                switch (target.y - myY) {
                    case -5:
                        return direction99;
                    case -4:
                        return direction67;
                    case -3:
                        return direction39;
                    case -2:
                        return direction23;
                    case -1:
                        return direction13;
                    case 0:
                        return direction12;
                    case 1:
                        return direction14;
                    case 2:
                        return direction24;
                    case 3:
                        return direction44;
                    case 4:
                        return direction74;
                    case 5:
                        return direction106;
                }
                break;
            case 3:
                switch (target.y - myY) {
                    case -5:
                        return direction101;
                    case -4:
                        return direction69;
                    case -3:
                        return direction47;
                    case -2:
                        return direction33;
                    case -1:
                        return direction31;
                    case 0:
                        return direction30;
                    case 1:
                        return direction32;
                    case 2:
                        return direction34;
                    case 3:
                        return direction48;
                    case 4:
                        return direction76;
                    case 5:
                        return direction108;
                }
                break;
            case 4:
                switch (target.y - myY) {
                    case -4:
                        return direction79;
                    case -3:
                        return direction61;
                    case -2:
                        return direction59;
                    case -1:
                        return direction57;
                    case 0:
                        return direction56;
                    case 1:
                        return direction58;
                    case 2:
                        return direction60;
                    case 3:
                        return direction62;
                    case 4:
                        return direction80;
                }
                break;
            case 5:
                switch (target.y - myY) {
                    case -3:
                        return direction93;
                    case -2:
                        return direction91;
                    case -1:
                        return direction89;
                    case 0:
                        return direction88;
                    case 1:
                        return direction90;
                    case 2:
                        return direction92;
                    case 3:
                        return direction94;
                }
                break;
        }

        currentDistance = myLocation.distanceSquaredTo(target);

        score54 = (currentDistance - location54.distanceSquaredTo(target)) / distance54;
        score55 = (currentDistance - location55.distanceSquaredTo(target)) / distance55;
        score61 = (currentDistance - location61.distanceSquaredTo(target)) / distance61;
        score62 = (currentDistance - location62.distanceSquaredTo(target)) / distance62;
        score68 = (currentDistance - location68.distanceSquaredTo(target)) / distance68;
        score69 = (currentDistance - location69.distanceSquaredTo(target)) / distance69;
        score75 = (currentDistance - location75.distanceSquaredTo(target)) / distance75;
        score76 = (currentDistance - location76.distanceSquaredTo(target)) / distance76;
        score81 = (currentDistance - location81.distanceSquaredTo(target)) / distance81;
        score88 = (currentDistance - location88.distanceSquaredTo(target)) / distance88;
        score95 = (currentDistance - location95.distanceSquaredTo(target)) / distance95;
        score102 = (currentDistance - location102.distanceSquaredTo(target)) / distance102;
        score82 = (currentDistance - location82.distanceSquaredTo(target)) / distance82;
        score83 = (currentDistance - location83.distanceSquaredTo(target)) / distance83;
        score89 = (currentDistance - location89.distanceSquaredTo(target)) / distance89;
        score90 = (currentDistance - location90.distanceSquaredTo(target)) / distance90;
        score96 = (currentDistance - location96.distanceSquaredTo(target)) / distance96;
        score97 = (currentDistance - location97.distanceSquaredTo(target)) / distance97;
        score103 = (currentDistance - location103.distanceSquaredTo(target)) / distance103;
        score104 = (currentDistance - location104.distanceSquaredTo(target)) / distance104;
        score84 = (currentDistance - location84.distanceSquaredTo(target)) / distance84;
        score85 = (currentDistance - location85.distanceSquaredTo(target)) / distance85;
        score91 = (currentDistance - location91.distanceSquaredTo(target)) / distance91;
        score92 = (currentDistance - location92.distanceSquaredTo(target)) / distance92;
        score98 = (currentDistance - location98.distanceSquaredTo(target)) / distance98;
        score99 = (currentDistance - location99.distanceSquaredTo(target)) / distance99;
        score105 = (currentDistance - location105.distanceSquaredTo(target)) / distance105;
        score106 = (currentDistance - location106.distanceSquaredTo(target)) / distance106;
        score77 = (currentDistance - location77.distanceSquaredTo(target)) / distance77;
        score78 = (currentDistance - location78.distanceSquaredTo(target)) / distance78;
        score79 = (currentDistance - location79.distanceSquaredTo(target)) / distance79;
        score80 = (currentDistance - location80.distanceSquaredTo(target)) / distance80;
        score86 = (currentDistance - location86.distanceSquaredTo(target)) / distance86;
        score87 = (currentDistance - location87.distanceSquaredTo(target)) / distance87;
        score93 = (currentDistance - location93.distanceSquaredTo(target)) / distance93;
        score94 = (currentDistance - location94.distanceSquaredTo(target)) / distance94;
        score100 = (currentDistance - location100.distanceSquaredTo(target)) / distance100;
        score101 = (currentDistance - location101.distanceSquaredTo(target)) / distance101;
        score107 = (currentDistance - location107.distanceSquaredTo(target)) / distance107;

        maxScore = Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(score54, score55), score61), score62), score68), score69), score75), score76), score81), score88), score95), score102), score82), score83), score89), score90), score96), score97), score103), score104), score84), score85), score91), score92), score98), score99), score105), score106), score77), score78), score79), score80), score86), score87), score93), score94), score100), score101), score107), (currentDistance - location108.distanceSquaredTo(target)) / distance108);

        if (maxScore == score54) {
            return direction54;
        }
        if (maxScore == score55) {
            return direction55;
        }
        if (maxScore == score61) {
            return direction61;
        }
        if (maxScore == score62) {
            return direction62;
        }
        if (maxScore == score68) {
            return direction68;
        }
        if (maxScore == score69) {
            return direction69;
        }
        if (maxScore == score75) {
            return direction75;
        }
        if (maxScore == score76) {
            return direction76;
        }
        if (maxScore == score81) {
            return direction81;
        }
        if (maxScore == score88) {
            return direction88;
        }
        if (maxScore == score95) {
            return direction95;
        }
        if (maxScore == score102) {
            return direction102;
        }
        if (maxScore == score82) {
            return direction82;
        }
        if (maxScore == score83) {
            return direction83;
        }
        if (maxScore == score89) {
            return direction89;
        }
        if (maxScore == score90) {
            return direction90;
        }
        if (maxScore == score96) {
            return direction96;
        }
        if (maxScore == score97) {
            return direction97;
        }
        if (maxScore == score103) {
            return direction103;
        }
        if (maxScore == score104) {
            return direction104;
        }
        if (maxScore == score84) {
            return direction84;
        }
        if (maxScore == score85) {
            return direction85;
        }
        if (maxScore == score91) {
            return direction91;
        }
        if (maxScore == score92) {
            return direction92;
        }
        if (maxScore == score98) {
            return direction98;
        }
        if (maxScore == score99) {
            return direction99;
        }
        if (maxScore == score105) {
            return direction105;
        }
        if (maxScore == score106) {
            return direction106;
        }
        if (maxScore == score77) {
            return direction77;
        }
        if (maxScore == score78) {
            return direction78;
        }
        if (maxScore == score79) {
            return direction79;
        }
        if (maxScore == score80) {
            return direction80;
        }
        if (maxScore == score86) {
            return direction86;
        }
        if (maxScore == score87) {
            return direction87;
        }
        if (maxScore == score93) {
            return direction93;
        }
        if (maxScore == score94) {
            return direction94;
        }
        if (maxScore == score100) {
            return direction100;
        }
        if (maxScore == score101) {
            return direction101;
        }
        if (maxScore == score107) {
            return direction107;
        }

        return direction108;
    }
}
